<ResourceDictionary  xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:local="clr-namespace:WPF.MDI"
                    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
                    xmlns:options="http://schemas.microsoft.com/winfx/2006/xaml/presentation/options"
                    mc:Ignorable="options">

    <!--  re-set brushes too  -->
    <SolidColorBrush x:Key="HighlightBrush" Color="{DynamicResource HighlightColor}" options:Freeze="True" />
    <SolidColorBrush x:Key="AccentBaseColorBrush" Color="{DynamicResource AccentBaseColor}" options:Freeze="True" />
    <SolidColorBrush x:Key="AccentColorBrush" Color="{DynamicResource AccentColor2}" options:Freeze="True" />
    <SolidColorBrush x:Key="AccentColorBrush2" Color="{DynamicResource AccentColor}" options:Freeze="True" />

    <SolidColorBrush x:Key="WindowTitleColorBrush" Color="{DynamicResource AccentColor2}" options:Freeze="True" />

    <LinearGradientBrush x:Key="ProgressBrush" StartPoint="1.002,0.5" EndPoint="0.001,0.5" options:Freeze="True">
        <GradientStop Offset="0" Color="{DynamicResource HighlightColor}" />
    </LinearGradientBrush>

    <SolidColorBrush x:Key="CheckmarkFill" Color="{DynamicResource AccentColor}" options:Freeze="True" />
    <SolidColorBrush x:Key="RightArrowFill" Color="{DynamicResource AccentColor}" options:Freeze="True" />

    <!--  DataGrid brushes  -->
    <SolidColorBrush x:Key="MetroDataGrid.HighlightBrush" Color="{DynamicResource AccentColor}" options:Freeze="True" />
    <SolidColorBrush x:Key="MetroDataGrid.HighlightTextBrush" Color="{DynamicResource IdealForegroundColor}" options:Freeze="True" />
    <SolidColorBrush x:Key="MetroDataGrid.FocusBorderBrush" Color="{DynamicResource AccentColor}" options:Freeze="True" />
    <SolidColorBrush x:Key="MetroDataGrid.InactiveSelectionHighlightBrush" Color="{DynamicResource AccentColor}" options:Freeze="True" />
    <SolidColorBrush x:Key="MetroDataGrid.InactiveSelectionHighlightTextBrush" Color="{DynamicResource IdealForegroundColor}" options:Freeze="True" />

    <SolidColorBrush x:Key="MahApps.Metro.Brushes.ToggleSwitchButton.OnSwitchBrush.Win10" Color="{DynamicResource AccentColor}" options:Freeze="True" />
    <SolidColorBrush x:Key="MahApps.Metro.Brushes.ToggleSwitchButton.OnSwitchMouseOverBrush.Win10" Color="{DynamicResource AccentColor}" options:Freeze="True" />
    <SolidColorBrush x:Key="MahApps.Metro.Brushes.ToggleSwitchButton.ThumbIndicatorCheckedBrush.Win10" Color="{DynamicResource IdealForegroundColor}" options:Freeze="True" />

    <!-- metro code-->
    <SolidColorBrush x:Key="NormalBorderBrush" Color="{DynamicResource AccentColor2}" />

    <LinearGradientBrush x:Key="NormalSubBorderBackground" EndPoint="0,1">
        <GradientStop Color="{DynamicResource AccentBaseColor2}" Offset="0.0" />
        <GradientStop Color="{DynamicResource AccentBaseColor2}" Offset="0.5" />
        <GradientStop Color="{DynamicResource AccentBaseColor2}" Offset="0.5" />
        <GradientStop Color="{DynamicResource AccentBaseColor2}" Offset="1.0" />
    </LinearGradientBrush>

    <LinearGradientBrush x:Key="NormalSubBorderBrush" EndPoint="0,1">
        <GradientStop Color="{DynamicResource AccentBaseColor2}" Offset="0.0" />
        <GradientStop Color="{DynamicResource AccentBaseColor2}" Offset="0.5" />
        <GradientStop Color="{DynamicResource AccentBaseColor2}" Offset="0.5" />
        <GradientStop Color="{DynamicResource AccentBaseColor2}" Offset="1.0" />
    </LinearGradientBrush>

    <LinearGradientBrush x:Key="NormalUnfocusedBackgroundBrush" EndPoint="0,1">
        <GradientStop Color="{DynamicResource AccentBaseColor2}" Offset="0"/>
        <GradientStop Color="{DynamicResource AccentBaseColor2}" Offset="1"/>
    </LinearGradientBrush>

    <LinearGradientBrush x:Key="NormalUnfocusedBorderBrush" EndPoint="0,1">
        <GradientStop Color="{DynamicResource AccentBaseColor2}" Offset="0"/>
        <GradientStop Color="{DynamicResource AccentBaseColor2}" Offset="1"/>
    </LinearGradientBrush>

    <SolidColorBrush x:Key="NormalUnfocusedSubBorderBrush" Color="#808080" />

    <LinearGradientBrush x:Key="NormalOverBackgroundBrush" EndPoint="0,1">
        <GradientStop Color="{DynamicResource AccentColor}" Offset="0.0" />
        <GradientStop Color="{DynamicResource AccentColor}" Offset="0.5" />
        <GradientStop Color="{DynamicResource AccentColor}" Offset="0.5" />
        <GradientStop Color="{DynamicResource AccentColor}" Offset="1.0" />
    </LinearGradientBrush>

    <LinearGradientBrush x:Key="NormalOverBorderBrush" EndPoint="0,1">
        <GradientStop Color="{DynamicResource AccentColor}" Offset="0.0" />
        <GradientStop Color="{DynamicResource AccentColor}" Offset="0.5" />
        <GradientStop Color="{DynamicResource AccentColor}" Offset="0.5" />
        <GradientStop Color="{DynamicResource AccentColor}" Offset="1.0" />
    </LinearGradientBrush>

    <LinearGradientBrush x:Key="NormalDisabledBackgroundBrush" EndPoint="0,1">
        <GradientStop Color="{DynamicResource AccentBaseColor2}" Offset="0"/>
        <GradientStop Color="{DynamicResource AccentBaseColor2}" Offset="1"/>
        <GradientStop Color="{DynamicResource AccentBaseColor2}" Offset="0.5"/>
        <GradientStop Color="{DynamicResource AccentBaseColor2}" Offset="0.5"/>
    </LinearGradientBrush>

    <LinearGradientBrush x:Key="NormalDisabledBorderBrush" EndPoint="0,1">
        <GradientStop Color="{DynamicResource AccentBaseColor2}" Offset="0"/>
        <GradientStop Color="{DynamicResource AccentBaseColor2}" Offset="1"/>
        <GradientStop Color="{DynamicResource AccentBaseColor2}" Offset="0.5"/>
        <GradientStop Color="{DynamicResource AccentBaseColor2}" Offset="0.5"/>
    </LinearGradientBrush>

    <SolidColorBrush x:Key="NormalDisabledSubBorderBrush" Color="#FF859BB5" />

    <LinearGradientBrush x:Key="NormalDisabledFocusedBackgroundBrush" EndPoint="0,1">
        <GradientStop Color="{DynamicResource AccentBaseColor2}" Offset="0"/>
        <GradientStop Color="{DynamicResource AccentBaseColor2}" Offset="1"/>
    </LinearGradientBrush>

    <LinearGradientBrush x:Key="NormalDisabledFocusedBorderBrush" EndPoint="0,1">
        <GradientStop Color="{DynamicResource AccentBaseColor2}" Offset="0"/>
        <GradientStop Color="{DynamicResource AccentBaseColor2}" Offset="1"/>
    </LinearGradientBrush>

    <Style x:Key="WindowButtonStyle" TargetType="{x:Type Button}">
        <Setter Property="SnapsToDevicePixels" Value="True" />
        <Setter Property="IsTabStop" Value="False" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border FocusVisualStyle="{x:Null}" Name="BaseBorder" BorderThickness="0" BorderBrush="{StaticResource NormalBorderBrush}">
                        <Border Name="Border" BorderThickness="0" Background="{StaticResource NormalSubBorderBackground}" BorderBrush="{StaticResource WindowTitleColorBrush}">
                            <ContentPresenter Content="{TemplateBinding Content}" />
                        </Border>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter TargetName="Border" Property="Background" Value="{StaticResource NormalSubBorderBackground}" />
                            <Setter TargetName="Border" Property="BorderBrush" Value="{StaticResource NormalSubBorderBackground}" />
                        </Trigger>
                        <Trigger Property="Tag" Value="0">
                            <Setter TargetName="Border" Property="Background" Value="{StaticResource NormalUnfocusedBackgroundBrush}" />
                            <Setter TargetName="Border" Property="BorderBrush" Value="{StaticResource NormalUnfocusedBorderBrush}" />
                            <Setter TargetName="BaseBorder" Property="BorderBrush" Value="{StaticResource NormalUnfocusedSubBorderBrush}" />
                        </Trigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsMouseOver" Value="True" />
                                <Condition Property="IsPressed" Value="False" />
                            </MultiTrigger.Conditions>
                            <Setter TargetName="Border" Property="Background" Value="{StaticResource NormalOverBackgroundBrush}" />
                            <Setter TargetName="Border" Property="BorderBrush" Value="{StaticResource NormalOverBorderBrush}" />
                        </MultiTrigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter TargetName="Border" Property="Background" Value="{StaticResource NormalDisabledBackgroundBrush}" />
                            <Setter TargetName="Border" Property="BorderBrush" Value="{StaticResource NormalDisabledBorderBrush}" />
                            <Setter TargetName="BaseBorder" Property="BorderBrush" Value="{StaticResource NormalDisabledSubBorderBrush}" />
                        </Trigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="Tag" Value="0" />
                                <Condition Property="IsEnabled" Value="False" />
                            </MultiTrigger.Conditions>
                            <Setter TargetName="Border" Property="Background" Value="{StaticResource NormalDisabledFocusedBackgroundBrush}" />
                            <Setter TargetName="Border" Property="BorderBrush" Value="{StaticResource NormalDisabledFocusedBorderBrush}" />
                        </MultiTrigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <SolidColorBrush x:Key="CloseBorderBrush" Color="{DynamicResource AccentBaseColor2}" />

    <SolidColorBrush x:Key="CloseFocusedBaseBorder" Color="{DynamicResource AccentColor3}" />

    <LinearGradientBrush x:Key="CloseUnfocusedBackgroundBrush" EndPoint="0,1">
        <GradientStop Color="{DynamicResource AccentBaseColor2}" Offset="0"/>
        <GradientStop Color="{DynamicResource AccentBaseColor2}" Offset="1"/>
    </LinearGradientBrush>

    <LinearGradientBrush x:Key="CloseUnfocusedBorderBrush" EndPoint="0,1">
        <GradientStop Color="{DynamicResource AccentBaseColor2}" Offset="0"/>
        <GradientStop Color="{DynamicResource AccentBaseColor2}" Offset="1"/>
    </LinearGradientBrush>

    <SolidColorBrush x:Key="CloseUnfocusedSubBorderBrush" />

    <LinearGradientBrush x:Key="CloseOverBackgroundBrush" EndPoint="0,1">
        <GradientStop Color="{DynamicResource HighlightColor}" Offset="0.0" />
        <GradientStop Color="{DynamicResource HighlightColor}" Offset="0.5" />
        <GradientStop Color="{DynamicResource HighlightColor}" Offset="0.5" />
        <GradientStop Color="{DynamicResource HighlightColor}" Offset="1.0" />
    </LinearGradientBrush>

    <Style x:Key="CloseButtonStyle" TargetType="{x:Type Button}">
        <Setter Property="SnapsToDevicePixels" Value="True" />
        <Setter Property="IsTabStop" Value="False" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border Name="BaseBorder" Width="30" Height="30" BorderThickness="0" BorderBrush="{StaticResource CloseBorderBrush}">
                        <Border Name="Border" BorderThickness="0" Background="{StaticResource CloseBorderBrush}" BorderBrush="{StaticResource CloseBorderBrush}">
                            <Canvas xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml" x:Name="appbar_close" Width="10" Height="10" HorizontalAlignment="Center" VerticalAlignment="Center" Clip="F1 M 0,0L 76,0L 76,76L 0,76L 0,0">
                                <Path Width="10" Height="10" Stretch="Fill" Fill="White" Data="F1 M 26.9166,22.1667L 37.9999,33.25L 49.0832,22.1668L 53.8332,26.9168L 42.7499,38L 53.8332,49.0834L 49.0833,53.8334L 37.9999,42.75L 26.9166,53.8334L 22.1666,49.0833L 33.25,38L 22.1667,26.9167L 26.9166,22.1667 Z "/>
                            </Canvas>
                        </Border>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter TargetName="Border" Property="Background" Value="{StaticResource CloseBorderBrush}" />
                            <Setter TargetName="Border" Property="BorderBrush" Value="{StaticResource CloseBorderBrush}" />
                        </Trigger>
                        <Trigger Property="Tag" Value="0">
                            <Setter TargetName="Border" Property="Background" Value="{StaticResource CloseUnfocusedBackgroundBrush}" />
                            <Setter TargetName="Border" Property="BorderBrush" Value="{StaticResource CloseUnfocusedBorderBrush}" />
                            <Setter TargetName="BaseBorder" Property="BorderBrush" Value="{StaticResource CloseUnfocusedSubBorderBrush}" />
                            <Setter TargetName="BaseBorder" Property="BorderBrush" Value="{StaticResource CloseUnfocusedSubBorderBrush}" />
                        </Trigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsMouseOver" Value="True" />
                                <Condition Property="IsPressed" Value="False" />
                            </MultiTrigger.Conditions>
                            <Setter TargetName="Border" Property="Background" Value="{StaticResource CloseOverBackgroundBrush}" />
                            <Setter TargetName="Border" Property="BorderBrush" Value="{StaticResource CloseOverBackgroundBrush}" />
                        </MultiTrigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <SolidColorBrush x:Key="MaximizedBaseBorderBrush" Color="{DynamicResource IdealForegroundColor}" />
    <SolidColorBrush x:Key="MaximizedDownBaseBorderBrush" Color="{DynamicResource IdealForegroundColor}" />

    <LinearGradientBrush x:Key="MaximizedSubBorderBrush" EndPoint="0,1">
        <GradientStop Color="{DynamicResource AccentColor}" Offset="0"/>
        <GradientStop Color="{DynamicResource AccentColor}" Offset="0.15"/>
        <GradientStop Color="{DynamicResource AccentColor}" Offset="0.15"/>
        <GradientStop Color="{DynamicResource AccentColor}" Offset="1"/>
    </LinearGradientBrush>

    <SolidColorBrush x:Key="MaximizedDownSubBorderBrush" Color="#d0deec" />

    <LinearGradientBrush x:Key="MaximizedBorderBackgroundBrush" EndPoint="0,1">
        <GradientStop Color="{DynamicResource AccentColor}" Offset="0"/>
        <GradientStop Color="{DynamicResource AccentColor}" Offset="0.15"/>
        <GradientStop Color="{DynamicResource AccentColor}" Offset="0.15"/>
        <GradientStop Color="{DynamicResource AccentColor}" Offset="1"/>
    </LinearGradientBrush>

    <Style x:Key="MaximizedButtonStyle" TargetType="{x:Type Button}">
        <Setter Property="Width" Value="18" />
        <Setter Property="Height" Value="18" />
        <Setter Property="IsTabStop" Value="False" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border Name="BaseBorder" BorderThickness="1" BorderBrush="{StaticResource MaximizedBaseBorderBrush}">
                        <Border Name="SubBorder" BorderThickness="1,1,1,0" BorderBrush="{StaticResource MaximizedSubBorderBrush}">
                            <Border Name="Border" Background="{StaticResource MaximizedBorderBackgroundBrush}">
                                <ContentPresenter Margin="0,2,0,0" Content="{TemplateBinding Content}" />
                            </Border>
                        </Border>
                    </Border>
                    <ControlTemplate.Triggers>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsPressed" Value="True" />
                                <Condition Property="IsEnabled" Value="True" />
                            </MultiTrigger.Conditions>
                            <Setter TargetName="BaseBorder" Property="BorderBrush" Value="{StaticResource MaximizedDownBaseBorderBrush}" />
                            <Setter TargetName="SubBorder" Property="BorderBrush" Value="{StaticResource MaximizedDownSubBorderBrush}" />
                        </MultiTrigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <SolidColorBrush x:Key="BackBorderBackgroundBrush" Color="{DynamicResource AccentColor2}" />
    <SolidColorBrush x:Key="BackBorderBrush" Color="{DynamicResource AccentColor2}" />

    <SolidColorBrush x:Key="NearBorderBrush" Color="{DynamicResource AccentColor}" />
    <SolidColorBrush x:Key="FarBorderBrush" Color="{DynamicResource AccentColor2}" />

    <SolidColorBrush x:Key="ChildBackground" Color="{DynamicResource IdealForegroundColor}" />

    <BitmapImage x:Key="RestoreImage" UriSource="/WPF.MDI;component/Themes/Metro/Restore.png" />

    <SolidColorBrush x:Key="BackBorderMaximizedBrush" Color="#FF4A5764" />

    <SolidColorBrush x:Key="ContentMaximizedBorderBrush" Color="#FFA0A0A0" />

    <BitmapImage x:Key="MaximizedMinimizeImage" UriSource="/WPF.MDI;component/Themes/Aero/MaximizedMinimize.png" />
    <BitmapImage x:Key="MaximizedRestoreImage" UriSource="/WPF.MDI;component/Themes/Metro/MaximizedRestore.png" />
    <BitmapImage x:Key="MaximizedCloseImage" UriSource="/WPF.MDI;component/Themes/Aero/MaximizedClose.png" />

    <BooleanToVisibilityConverter x:Key="BoolToVisibility" />

    <Style TargetType="{x:Type local:MdiChild}">
        <Setter Property="Width" Value="300" />
        <Setter Property="Height" Value="300" />
        <Setter Property="MinWidth" Value="150" />
        <Setter Property="MinHeight" Value="35" />
        <Setter Property="Background" Value="{StaticResource ChildBackground}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type local:MdiChild}">
                    <Border Name="BaseBorder" BorderThickness="1" Background="{StaticResource BackBorderBackgroundBrush}" BorderBrush="{StaticResource BackBorderBrush}">
                        <Border.Effect>
                            <DropShadowEffect x:Name="BaseBorderShadow" Opacity="0.4" BlurRadius="25" Direction="-45" RenderingBias="Performance" ShadowDepth="4"/>
                        </Border.Effect>
                        <Grid>


                            <Thumb Name="DragThumb" Height="30" VerticalAlignment="Top" Opacity="0" />

                            <StackPanel Name="ButtonsPanel" Orientation="Horizontal" HorizontalAlignment="Right" Margin="0,0,0,0" VerticalAlignment="Top" >
                                <Button Name="MinimizeButton" Width="30" Height="30" Margin="0,0,0,0" RenderOptions.BitmapScalingMode="NearestNeighbor" Style="{DynamicResource WindowButtonStyle}">
                                    <Canvas xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml" x:Name="appbar_minus" Margin="5,0,0,9" HorizontalAlignment="Center" VerticalAlignment="Bottom" Width="15" Height="5" Clip="F1 M 0,0L 76,0L 76,76L 0,76L 0,0">
                                        <Path Width="10" Height="3" Stretch="Fill" Fill="White" Data="F1 M 19,38L 57,38L 57,44L 19,44L 19,38 Z "/>
                                    </Canvas>
                                </Button>
                                <Button Name="MaximizeButton" Width="30" Height="30" Margin="0,0,0,0" Style="{DynamicResource WindowButtonStyle}">
                                    <Canvas xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml" x:Name="appbar_app" Margin="4,0,0,5" HorizontalAlignment="Center" VerticalAlignment="Bottom" Width="15" Height="15" Clip="F1 M 0,0L 76,0L 76,76L 0,76L 0,0">
                                        <Path Width="10" Height="10" Stretch="Fill" Fill="White" Data="F1 M 18,23L 58,23L 58,53L 18,53L 18,23 Z M 54,31L 22,31L 22,49L 54,49L 54,31 Z "/>
                                    </Canvas>
                                </Button>
                                <Button Name="CloseButton" Width="30" Height="30" Style="{DynamicResource CloseButtonStyle}" />
                            </StackPanel>

                            <Grid Name="HeaderContent" Height="28" Margin="6,0,109,0" VerticalAlignment="Top" IsHitTestVisible="False">
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="Auto" />
                                    <ColumnDefinition />
                                </Grid.ColumnDefinitions>
                                <Image Name="IconImage" Width="16" Height="16" Margin="2,6,0,0" Stretch="UniformToFill" RenderOptions.BitmapScalingMode="NearestNeighbor" Source="{TemplateBinding Icon}" Visibility="{TemplateBinding ShowIcon, Converter={StaticResource BoolToVisibility}}" />
                                <TextBlock Name="Header" Grid.Column="1" Margin="4,3,0,0" Typography.Capitals="AllSmallCaps" TextBlock.FontSize="17"  TextBlock.Foreground="White" TextTrimming="CharacterEllipsis" TextWrapping="NoWrap" Text="{TemplateBinding Title}" />
                            </Grid>

                            <Border Name="ContentBorder" Margin="0,30,0,0" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}">
                                <ContentControl Content="{TemplateBinding Content}" />
                            </Border>

                            <Rectangle Name="LeftBorder" Width="0" HorizontalAlignment="Left" RadiusX="0" RadiusY="0" Fill="{StaticResource FarBorderBrush}" />
                            <Rectangle Name="TopBorder" Height="0" VerticalAlignment="Top" RadiusX="0" RadiusY="0" Fill="{StaticResource FarBorderBrush}" />
                            <Rectangle Name="RightBorder" Width="0" HorizontalAlignment="Right" RadiusX="0" RadiusY="0" Fill="{StaticResource FarBorderBrush}" />
                            <Rectangle Name="BottomBorder" Height="0" VerticalAlignment="Bottom" RadiusX="0" RadiusY="0" Fill="{StaticResource FarBorderBrush}" />

                            <Thumb Name="ResizeLeft" Width="6" HorizontalAlignment="Left" Margin="0,6,0,6" Opacity="0" Cursor="SizeWE" IsHitTestVisible="{TemplateBinding Resizable}" />
                            <Thumb Name="ResizeTop" Height="4" VerticalAlignment="Top" Margin="6,0,6,0" Opacity="0" Cursor="SizeNS" IsHitTestVisible="{TemplateBinding Resizable}" />
                            <Thumb Name="ResizeRight" Width="6" HorizontalAlignment="Right" Margin="0,6,0,6" Opacity="0" Cursor="SizeWE" IsHitTestVisible="{TemplateBinding Resizable}" />
                            <Thumb Name="ResizeBottom" Height="6" VerticalAlignment="Bottom" Margin="6,0,6,0" Opacity="0" Cursor="SizeNS" IsHitTestVisible="{TemplateBinding Resizable}" />
                            <Thumb Name="ResizeTopLeft" Width="6" Height="6" HorizontalAlignment="Left" VerticalAlignment="Top" Opacity="0" Cursor="SizeNWSE" IsHitTestVisible="{TemplateBinding Resizable}" />
                            <Thumb Name="ResizeTopRight" Width="6" Height="6" HorizontalAlignment="Right" VerticalAlignment="Top" Opacity="0" Cursor="SizeNESW" IsHitTestVisible="{TemplateBinding Resizable}" />
                            <Thumb Name="ResizeBottomRight" Width="6" Height="6" HorizontalAlignment="Right" VerticalAlignment="Bottom" Opacity="0" Cursor="SizeNWSE" IsHitTestVisible="{TemplateBinding Resizable}" />
                            <Thumb Name="ResizeBottomLeft" Width="6" Height="6" HorizontalAlignment="Left" VerticalAlignment="Bottom" Opacity="0" Cursor="SizeNESW" IsHitTestVisible="{TemplateBinding Resizable}" />
                        </Grid>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="Focused" Value="False">
                            <Setter TargetName="BaseBorder" Property="Background" Value="#808080" />
                            <Setter TargetName="BaseBorder" Property="BorderBrush" Value="#808080" />
                            <Setter TargetName="LeftBorder" Property="Opacity" Value="0" />
                            <Setter TargetName="TopBorder" Property="Opacity" Value="0" />
                            <Setter TargetName="RightBorder" Property="Opacity" Value="0" />
                            <Setter TargetName="BottomBorder" Property="Opacity" Value="0" />
                            <Setter TargetName="CloseButton" Property="Tag" Value="0" />
                            <Setter TargetName="MaximizeButton" Property="Tag" Value="0" />
                            <Setter TargetName="MinimizeButton" Property="Tag" Value="0" />
                        </Trigger>
                        <Trigger SourceName="IconImage" Property="Source" Value="{x:Null}">
                            <Setter TargetName="IconImage" Property="Width" Value="0" />
                            <Setter TargetName="IconImage" Property="Margin" Value="0" />
                        </Trigger>
                        <Trigger Property="WindowState" Value="Minimized">
                            <Setter Property="MinWidth" Value="160" />
                            <Setter Property="MinHeight" Value="29" />
                            <Setter Property="Width" Value="160" />
                            <Setter Property="Height" Value="29" />
                            <Setter Property="Resizable" Value="False" />
                            <Setter TargetName="ButtonsPanel" Property="Margin" Value="0,5,5,0" />
                            <Setter TargetName="IconImage" Property="Margin" Value="2,0,0,0" />
                            <Setter TargetName="Header" Property="Margin" Value="4,6,0,0" />
                            <Setter TargetName="MinimizeButton" Property="Template">
                                <Setter.Value>
                                    <ControlTemplate TargetType="{x:Type Button}">
                                        <Button Width="31" Height="17" Style="{DynamicResource WindowButtonStyle}">
                                            <Image Width="12" Height="11" Source="{StaticResource RestoreImage}" />
                                        </Button>
                                    </ControlTemplate>
                                </Setter.Value>
                            </Setter>
                        </Trigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="WindowState" Value="Minimized" />
                                <Condition Property="Focused" Value="False" />
                            </MultiTrigger.Conditions>
                            <Setter TargetName="MinimizeButton" Property="Template">
                                <Setter.Value>
                                    <ControlTemplate TargetType="{x:Type Button}">
                                        <Button Tag="0" Width="31" Height="17" Style="{DynamicResource WindowButtonStyle}">
                                            <Image Width="12" Height="11" Source="{StaticResource RestoreImage}" />
                                        </Button>
                                    </ControlTemplate>
                                </Setter.Value>
                            </Setter>
                        </MultiTrigger>
                        <Trigger Property="WindowState" Value="Maximized">
                            <Setter Property="Resizable" Value="False" />
                            <Setter TargetName="BaseBorder" Property="BorderThickness" Value="0,1,0,0" />
                            <Setter TargetName="BaseBorder" Property="BorderBrush" Value="{StaticResource BackBorderMaximizedBrush}" />
                            <Setter TargetName="BaseBorder" Property="CornerRadius" Value="0" />
                            <Setter TargetName="ContentBorder" Property="BorderThickness" Value="1" />
                            <Setter TargetName="ContentBorder" Property="BorderBrush" Value="{StaticResource ContentMaximizedBorderBrush}" />
                            <Setter TargetName="ContentBorder" Property="Margin" Value="0,0,0,0" />
                            <!-- HERE -->
                            <Setter TargetName="HeaderContent" Property="Height" Value="20" />
                            <Setter TargetName="LeftBorder" Property="Visibility" Value="Hidden" />
                            <Setter TargetName="TopBorder" Property="Visibility" Value="Hidden" />
                            <Setter TargetName="RightBorder" Property="Visibility" Value="Hidden" />
                            <Setter TargetName="BottomBorder" Property="Visibility" Value="Hidden" />
                            <Setter TargetName="Header" Property="Visibility" Value="Hidden" />
                            <Setter TargetName="IconImage" Property="Margin" Value="2,0,0,0" />
                            <Setter TargetName="MinimizeButton" Property="Margin" Value="20,1,1,1" />
                            <Setter TargetName="MaximizeButton" Property="Margin" Value="1" />
                            <Setter TargetName="CloseButton" Property="Margin" Value="1" />
                            <Setter TargetName="MinimizeButton" Property="Width" Value="18" />
                            <Setter TargetName="MaximizeButton" Property="Width" Value="18" />
                            <Setter TargetName="CloseButton" Property="Width" Value="18" />
                            <Setter TargetName="MinimizeButton" Property="Height" Value="18" />
                            <Setter TargetName="MaximizeButton" Property="Height" Value="18" />
                            <Setter TargetName="CloseButton" Property="Height" Value="18" />
                            <Setter TargetName="MinimizeButton" Property="Template">
                                <Setter.Value>
                                    <ControlTemplate TargetType="{x:Type Button}">
                                        <Button Style="{DynamicResource MaximizedButtonStyle}">
                                            <Image Width="14" Height="13" Source="{StaticResource MaximizedMinimizeImage}" />
                                        </Button>
                                    </ControlTemplate>
                                </Setter.Value>
                            </Setter>
                            <Setter TargetName="MaximizeButton" Property="Template">
                                <Setter.Value>
                                    <ControlTemplate TargetType="{x:Type Button}">
                                        <Button Style="{DynamicResource MaximizedButtonStyle}">
                                            <Image Width="14" Height="13" Source="{StaticResource MaximizedRestoreImage}" />
                                        </Button>
                                    </ControlTemplate>
                                </Setter.Value>
                            </Setter>
                            <Setter TargetName="CloseButton" Property="Template">
                                <Setter.Value>
                                    <ControlTemplate TargetType="{x:Type Button}">
                                        <Button Style="{DynamicResource MaximizedButtonStyle}">
                                            <Image Width="14" Height="13" Source="{StaticResource MaximizedCloseImage}" />
                                        </Button>
                                    </ControlTemplate>
                                </Setter.Value>
                            </Setter>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
</ResourceDictionary>